# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `yael` gem.
# Please instead update this file by running `bin/tapioca gem yael`.

# source://yael//lib/yael/version.rb#3
module Yael; end

# source://yael//lib/yael/bus.rb#4
class Yael::Bus
  # source://yael//lib/yael/bus.rb#33
  def dispatch(name, stream:, payload:); end

  # source://yael//lib/yael/bus.rb#38
  def process(event); end

  # source://yael//lib/yael/bus.rb#25
  def routes; end

  # source://yael//lib/yael/bus.rb#29
  def routing(&block); end

  class << self
    # source://yael//lib/yael/bus.rb#6
    def shared; end
  end
end

# source://yael//lib/yael/dispatch_job.rb#4
class Yael::DispatchJob < ::ActiveJob::Base
  # source://yael//lib/yael/dispatch_job.rb#9
  def perform(name:, stream:, payload:, created_at:, persist: T.unsafe(nil)); end

  class << self
    # source://activejob/7.0.4.3/lib/active_job/queue_name.rb#56
    def queue_name; end

    # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end
  end
end

# source://yael//lib/yael/dispatch_map.rb#4
class Yael::DispatchMap
  # @return [DispatchMap] a new instance of DispatchMap
  #
  # source://yael//lib/yael/dispatch_map.rb#5
  def initialize(block); end

  # Returns the value of attribute routes.
  #
  # source://yael//lib/yael/dispatch_map.rb#10
  def routes; end

  protected

  # source://yael//lib/yael/dispatch_map.rb#14
  def dispatch(descriptor, to:, queue: T.unsafe(nil), after: T.unsafe(nil)); end
end

# source://yael//lib/yael.rb#13
class Yael::Error < ::StandardError; end

# source://yael//lib/yael/event.rb#4
class Yael::Event < ::ActiveRecord::Base
  include ::Yael::Event::GeneratedAttributeMethods
  include ::Yael::Event::GeneratedAssociationMethods
  include ::Kaminari::ActiveRecordModelExtension
  include ::Kaminari::ConfigurationMethods
  extend ::Kaminari::ConfigurationMethods::ClassMethods

  class << self
    # source://activemodel/7.0.4.3/lib/active_model/validations.rb#52
    def _validators; end

    # source://activerecord/7.0.4.3/lib/active_record/enum.rb#116
    def defined_enums; end

    # source://kaminari-activerecord/1.2.2/lib/kaminari/activerecord/active_record_model_extension.rb#15
    def page(num = T.unsafe(nil)); end

    # source://yael//lib/yael/event.rb#6
    def stream_for(object); end
  end
end

# source://yael//lib/yael/event.rb#0
module Yael::Event::GeneratedAssociationMethods; end

# source://yael//lib/yael/event.rb#0
module Yael::Event::GeneratedAttributeMethods; end

# source://yael//lib/yael/execution_job.rb#4
class Yael::ExecutionJob < ::ActiveJob::Base
  # source://yael//lib/yael/execution_job.rb#7
  def perform(target_name, method, stream, args); end

  private

  # source://yael//lib/yael/execution_job.rb#15
  def extract_parameters(method, stream, args); end

  # source://yael//lib/yael/execution_job.rb#22
  def publisher_for(stream:); end

  class << self
    # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end
  end
end

# source://yael//lib/yael/publisher.rb#4
module Yael::Publisher
  extend ::ActiveSupport::Concern

  # source://yael//lib/yael/publisher.rb#7
  def publish(name, on: T.unsafe(nil), **payload); end
end

# source://yael//lib/yael/route.rb#4
class Yael::Route
  # @return [Route] a new instance of Route
  #
  # source://yael//lib/yael/route.rb#7
  def initialize(descriptor:, target:, queue: T.unsafe(nil), delay: T.unsafe(nil)); end

  # Returns the value of attribute delay.
  #
  # source://yael//lib/yael/route.rb#5
  def delay; end

  # Returns the value of attribute descriptor.
  #
  # source://yael//lib/yael/route.rb#5
  def descriptor; end

  # source://yael//lib/yael/route.rb#22
  def dispatch(event); end

  # @return [Boolean]
  #
  # source://yael//lib/yael/route.rb#16
  def matches?(stream); end

  # Returns the value of attribute queue.
  #
  # source://yael//lib/yael/route.rb#5
  def queue; end

  # Returns the value of attribute target.
  #
  # source://yael//lib/yael/route.rb#5
  def target; end

  private

  # Returns the value of attribute target_method.
  #
  # source://yael//lib/yael/route.rb#30
  def target_method; end

  # Returns the value of attribute target_name.
  #
  # source://yael//lib/yael/route.rb#30
  def target_name; end
end

# source://yael//lib/yael/version.rb#4
Yael::VERSION = T.let(T.unsafe(nil), String)
